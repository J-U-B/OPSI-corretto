;======================================================================
; setup.opsiscript AMAZON CORRETTO (MSI)
; Installer type: INNO/MSI
; 
; J. Boettge <boettge@mpi-halle.mpg.de>  2021-04-22 14:36:51 +0200
;======================================================================

;======================================================================
[Initial]
;======================================================================
setLogLevel=5
; Log Errors in Logfile and abort:
ExitOnError=true
; Show syntax errors in the script:
ScriptErrorMessages=off
; Dont trace step by step through the script:
TraceMode=off 
; Let started programs run in front of the winst window
StayOnTop=false 

;======================================================================
[Actions]
;======================================================================
include_insert "%ScriptPath%\product_variables.opsiinc"


;=== Check free space
if not(HasMinimumSpace ("%SystemDrive%", $MinimumSpace$))
	LogError "Not enough space on %SystemDrive%, " + $MinimumSpace$ + " on drive %SystemDrive% needed for " + $ProductId$
	isFatalError
	; Stop process and set installation status to failed
else
	;=== remove previous installation
	if FileExists("%ScriptPath%\delsub.opsiinc")
		comment  "Starting uninstall sub section"
		; sub "%ScriptPath%\delsub.opsiinc"	
		include_append "%ScriptPath%\delsub.opsiinc"
		sub_delsub_main
	else
		logError "Can't find uninstaller script"
		isFatalError "delsub.opsiinc not found"
	endif	

	; Start the installation
	marktime

	if $pr_localCopy$ = "True"
		ShowBitmap $Img_Prepare$ $ProductName$
		Message "Copying the installer to local disk"
		Files_CopyLocalInstaller
		set $Installer$ = $TempDir$ + "\" + $InstallerFile$
	else
		set $Installer$ = $InstallerSrc$
	endif

	ShowBitmap $Img_Install$ $ProductName$
	Message "Installing " + $ProductName$ + " " + $Version$+ " (" + $sw_arch$ + " bit)"
	
	if not (FileExists($Installer$))
		logError "Installer not found: [" + $Installer$ + "]"
		isFatalError
	endif
	
	;=== run the installer
	comment "Start " + $InstallerType$ +" setup program"
	Switch $InstallerType$
		Case "INNO"
			Winbatch_INNO_install
			Sub_check_exitcode_inno
		EndCase
		Case "MSI"
			Winbatch_MSI_install
			Sub_check_exitcode_msi
		EndCase
		Case "NSIS"
			isFatalError "FATAL ERROR: Currently unsupported installer type [" + $InstallerType$ + "]"
		EndCase
		DefaultCase
			isFatalError "FATAL ERROR: Unknown installer type [" + $InstallerType$ + "]"
		EndCase
	EndSwitch

	if $pr_localCopy$ = "True"
		comment "delete local installer copy: [" + $TempDir$ + "\" + $InstallerFile$ = "]"
		Files_DeleteLocalInstaller
	endif

	if not($FatalError$ = "")
		isFatalError $FatalError$
	endif

	
	; ----------------------------------------------------
	; ToDo: check for existence of characteristic binaries
	; ----------------------------------------------------
	;set $MainBin$ = $InstallDir$+$CheckBin$
	;if not (FileExists($MainBin$))
	;	logError "Main binary not found! [" + $MainBin$ + "]"
	;	isFatalError
	;endif
	
	;=== configure settings and workarounds:
	ShowBitmap $Img_Config$ $ProductName$
	
	set $ResultList$ = shellCall('dir /b "' + $InstallDir$ +'"')
	if count($ResultList$) INT>= "1"
		if (($ProductMajor$ INT> "8") and (count($ResultList$) INT= "1")) or (($ProductMajor$ INT= "8") and (count($ResultList$) INT= "2"))
			set $JAVA_HOME$ = $InstallDir$ + takeString("0",$ResultList$)
		else
			logWarning "It looks like there are still remains of an old installation."
			set $JAVA_HOME$ = $InstallDir$ + $JAVA_SUB_DIR$
		endif
	else
		set $JAVA_HOME$ = ""
		logError "Error detecting JavaHome directory"
	endif	
	
	if ($pr_set_jar_handler$ = "true")
		; set FTYPE for JAR files an ASSOC the handler
		
		set $MainBin$ = ""
		if not($JAVA_HOME$ = "")
			set $MainBin$ = $JAVA_HOME$ + "\bin\javaw.exe"
		else
			logError "No path for main binary (missing JavaHome)"
		endif

		if (not($MainBin$ = "") AND FileExists($MainBin$))
			comment "File main binary found at: " + $MainBin$
			comment "Setting FTYPE and ASSOC"
			ShellInAnIcon_SetFtypeAndAssoc
		else
			logError "Path for main binary is empty or file not found: [" + $MainBin$ + "]"
		endif		
	endif
	
	if ($ProductMajor$ = "11") and not ($JAVA_HOME$ = "")
		; fix some missing registry keys in HKLM\SOFTWARE\JavaSoft
		Switch $sw_arch$
			Case "32"
				Registry_Fix_JavaSoft /32Bit
			EndCase
			Case "64"
				Registry_Fix_JavaSoft /64Bit
			EndCase
		EndSwitch	
	endif
	
	
	{{#ifdef_property_desktop_link}}
	;=== create desktop link if requested
	if ($pr_DesktopLink$ = "true")
		LinkFolder_CreateDesktopLink
	endif
	{{/ifdef_property_desktop_link}}


	;=== custom post install
	comment "include custom post install file"
	if not ($CustomPostInstall$ = "none")
		if FileExists("%ScriptPath%\custom\" + $CustomPostInstall$)
			ShowBitmap $Img_Install_Custom$ $ProductName$
			include_insert "%ScriptPath%\custom\" + $CustomPostInstall$
			ShowBitmap $Img_Install$ $ProductName$
		endif
	endif
	
	;=== measure installation time
	set $TimeDiff$ = getDiffTimeSec
	Message  "Setup time: " + $TimeDiff$ + " seconds"	
	
endif


;======================================================================
[Files_CopyLocalInstaller]
;======================================================================
copy "$InstallerSrc$" "$TempDir$"


;======================================================================
[Files_DeleteLocalInstaller]
;======================================================================
delete -f "$TempDir$\$InstallerFile$"


;======================================================================
[Winbatch_INNO_install]
;======================================================================
$Installer$ $INNO_Inst_Opts$


;======================================================================
[Winbatch_MSI_install]
;======================================================================
; $MSI_Inst_Cmd$
msiexec /i "$Installer$" $MSI_Inst_Opts$


;======================================================================
[ShellInAnIcon_SetFtypeAndAssoc]
;======================================================================
ftype $StrippedProductId$.JarFile="$MainBin$" -jar "%%1" %%*
assoc .jar=$StrippedProductId$.JarFile

 
;=====================================================================
[LinkFolder_RemoveDesktopLink]
;=====================================================================
set_basefolder common_desktopdirectory
set_subfolder ""
delete_element $ProductName$
 
 
;=====================================================================
[LinkFolder_CreateDesktopLink]
;=====================================================================
set_basefolder common_desktopdirectory
set_subfolder ""
set_link
       name: $ProductName$
       target: "$MainBin$"
       parameters:
       working_dir: "$InstallDir$"
       icon_file: "$MainBin$"
       icon_index:
end_link


;=====================================================================
[LinkFolder_create_StartMenuLinks]
;=====================================================================
set_basefolder common_programs
set_subfolder "$ProductName$"
set_link 
	name: $ProductName$
	target: "$MainBin$"
	parameters:
	working_dir: "$InstallDir$"
	icon_file:
	icon_index:
end_link


;=====================================================================
[Registry_Fix_JavaSoft]
;=====================================================================
openkey [HKLM\SOFTWARE\JavaSoft\Java Development Kit\$JAVA_VER$]
set "JavaHome"="$JAVA_HOME$"
openkey [HKLM\SOFTWARE\JavaSoft\Java Development Kit]
set "CurrentVersion"="$JAVA_VER$"

openkey [HKLM\SOFTWARE\JavaSoft\Java Runtime Environment\$JAVA_VER$]
set "JavaHome"="$JAVA_HOME$"
openkey [HKLM\SOFTWARE\JavaSoft\Java Runtime Environment]
set "CurrentVersion"="$JAVA_VER$"
